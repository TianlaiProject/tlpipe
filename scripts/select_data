#!/usr/bin/env python

"""Select data from raw visibility hdf5 files.

Authors: Shifan Zuo
Date:    2022-07-02
Email:   sfzuo@bao.ac.cn
"""

import os
import logging
import argparse
from tlpipe.utils.argparse_action import EvalAction


logging.basicConfig(level=logging.INFO)


parser = argparse.ArgumentParser(description='Select data from raw visibility hdf5 files.')
parser.add_argument('input_files', type=str, nargs='+', help='Input raw visibility hdf5 files.')
parser.add_argument('-o', '--output_files', type=str, nargs='*', default=None, help='Output hdf5 files.')
parser.add_argument('--outdir', type=str, default='./', help='Output directory.')
parser.add_argument('-t', '--process_timing', action='store_true', help='Show timing of the task.')
parser.add_argument('--days', type=float, default=1.0, help='How many number of days.')
# parser.add_argument('--time_select', type=str, default=(0, None), action=EvalAction, help='Select time to read.')
parser.add_argument('--time_start', dest='start', type=int, default=0, help='Select time start index to read.')
parser.add_argument('--time_stop', dest='stop', type=int, default=None, help='Select time stop index to read.')
parser.add_argument('--freq_select', type=str, default=(0, None), action=EvalAction, help='Select frequency to read.')
parser.add_argument('--pol_select', type=str, default=(0, None), action=EvalAction, help='Select polarization to read.')
parser.add_argument('--feed_select', type=str, default=(0, None), action=EvalAction, help='Select feeds to read.')
parser.add_argument('--show_progress', action='store_true', help='Show progress of executing.')
parser.add_argument('--show_info', action='store_true', help='Show informations of internal data.')

args = parser.parse_args()
args_dict = vars(args)
# print(args_dict)

# set environment var
os.environ['TL_OUTPUT'] = args_dict['outdir'] + '/'

from tlpipe.timestream import dispatch

Dispatch = dispatch.Dispatch

# prefix = dispatch.Dispatch.prefix
Dispatch.params_init.update(args_dict)
Dispatch.params_init.update({'extra_inttime': 0})
# print(Dispatch.params_init)
dispatch = Dispatch()
# print(dispatch.params)
dispatch.setup()
dispatch.next()
dispatch.finish()
# print('finish')