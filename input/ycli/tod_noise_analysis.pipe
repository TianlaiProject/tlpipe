# -*- mode: python; -*-
#

import os

from tlpipe.timestream import convertion
from tlpipe.timestream import tod_noise
from tlpipe.timestream import tod_svd
from tlpipe.plot import plot_svd
from tlpipe.plot import plot_ps
from tlpipe.plot import plot_waterfall


#data_base = os.getenv('DATA_BASE')
data_base = '/data/users/ycli/'

pipe_tasks = []
pipe_outdir = data_base + 'meerkat/'
pipe_logging = 'info'
pipe_copy = False

data_path = data_base + '/meerkat/raw/'

# # for the 1Hz data
# file_name = '1474580580'
# bad_time_list = [[3437, 3520]]
# bad_freq_list = [[None, 2190], [2473, 2548], [2696, 2704], [2900, None]]

# for the 20Hz data
file_name = '1474580092'
bad_time_list = [[0,  2064], [5664, None]]
bad_freq_list = [[None, 2190], [2473, 2548], [2696, 2704], [2900, None]]

#bad_freq_list = [[300, 500], [820, 845], [1014, 1087], 
#                 [1100, 2150], [2695, 2702], [2890, 3010],
#                 [3190, 3710], [3900, None]]

n_bins    = 20 
n_bins_f  = 10
mode_list = [0, 1, 2, 5]
ps_method = 'lombscargle' #'fft'
prewhiten = True

input_files = ['%s.h5'%file_name, ]

#pipe_tasks.append(convertion.MeerKAT2TL)

#pipe_tasks.append(tod_noise.DataEdit)

#pipe_tasks.append(tod_svd.SVD)

#pipe_tasks.append((tod_noise.PinkNoisePS, 'pnpsvis_'))

pipe_tasks.append((tod_noise.PinkNoisePS_1DTC, 'pnps1dtccln_'))

#pipe_tasks.append((tod_noise.PinkNoisePS_1DFC, 'pnps1dfccln_'))

#pipe_tasks.append((tod_noise.PinkNoisePS, 'pnpsmod_'))


# ===================================================================
# ==                         for plot                              ==
# ===================================================================

ant = 'm017' #'m021', 'm017', 'm036'
#file_middle = '_avg0100F_tcorrps_%s'%ps_method
file_middle = '_avg0050F_tcorrps_%s'%ps_method
#file_middle = '_avg0100T_tcorrps_%s'%ps_method
#file_middle = '_avg2000T_tcorrps_%s'%ps_method
file_suffix = file_middle + '_%s_x_%s'%(ant, ant)

#pipe_tasks.append((plot_svd.PlotSVD, 'psvd_'))

#pipe_tasks.append((plot_ps.PlotPS, 'pps1dtcsvd_'))

#pipe_tasks.append((plot_ps.PlotPS, 'pps1dfcsvd_'))

#pipe_tasks.append((plot_ps.PlotPS, 'ppsmod_'))

#pipe_tasks.append((plot_ps.PlotPS, 'ppsall_'))

#pipe_tasks.append(plot_waterfall.PlotMeerKAT)


# ===================================================================
# ==             details for parameter defination                  ==
# ===================================================================

# parameter for MeerKAt to TL
m2t_input_files   = ['raw/%s'%f for f in input_files]
m2t_output_files  = ['tl/%s'%f for f in input_files]

#------------------------------------------------------------------------------

# paramerer for DataEdit
pned_input_files  = ['tl/%s'%f for f in input_files]
pned_corr = 'auto'
pned_pol_select = (0, 2) # ignore the cross pol
pned_out = 'pned'
pned_bad_time_list = bad_time_list
pned_bad_freq_list = bad_freq_list
pned_output_files  = ['pned/%s'%f for f in input_files]

#------------------------------------------------------------------------------

# parameter for SVD
#todsvd_in = pned_out
todsvd_input_files = pned_output_files
todsvd_mode_list = mode_list
todsvd_output_files = ['svd/%s'%f for f in input_files]
todsvd_prewhiten = prewhiten
#todsvd_out = 'todsvd'

#------------------------------------------------------------------------------

# parameter for Power spectrum estimation for raw vis
pnpsvis_input_files = todsvd_output_files
pnpsvis_output_files = ['pnps/%s'%f for f in input_files]
pnpsvis_data_sets = 'vis'
pnpsvis_n_bins = n_bins
pnpsvis_method =  ps_method
pnpsvis_avg_len = 100

#------------------------------------------------------------------------------

# parameter for Power spectrum estimation for cleaned vis
pnps1dtccln_input_files  = todsvd_output_files
pnps1dtccln_output_files = ['pnps_1dtc/%s'%f for f in input_files]
pnps1dtccln_data_sets = 'cleaned_vis'
pnps1dtccln_n_bins = n_bins
pnps1dtccln_f_min  = 1.e-4
pnps1dtccln_f_max  = 10.
pnps1dtccln_method =  ps_method
pnps1dtccln_avg_len = 100
#pnps1dtccln_avg_len = 50

#------------------------------------------------------------------------------

pnps1dfccln_input_files  = todsvd_output_files
pnps1dfccln_output_files = ['pnps_1dfc/%s'%f for f in input_files]
pnps1dfccln_data_sets = 'cleaned_vis'
pnps1dfccln_n_bins = n_bins_f
pnps1dfccln_w_min  = 8.e-3
pnps1dfccln_w_max  = 2.
pnps1dfccln_method =  ps_method
#pnps1dfccln_avg_len = 100
pnps1dfccln_avg_len = 20

#------------------------------------------------------------------------------
# parameter for Power spectrum estimation for svd modes
pnpsmod_input_files = todsvd_output_files
pnpsmod_output_files = ['pnps/%s'%f for f in input_files]
pnpsmod_data_sets = 'modes'
pnpsmod_n_bins = n_bins
pnpsmod_method =  ps_method
pnpsmod_avg_len = 100

#------------------------------------------------------------------------------

# parameter for plot SVD modes
psvd_input_files = ['svd/%s_svdmodes_%s_x_%s.h5'%(file_name, ant, ant) ]
psvd_output_files = ['svd/%s_svdmodes_%s_x_%s'%(file_name, ant, ant) ]
psvd_mode_n = 6

#------------------------------------------------------------------------------

# parameter for plot ps with differenct svd modes subtraction
file_name_temp = 'pnps_1dtc/' + file_name + '_vis_sub%02dmodes' + file_suffix + '.h5'
pps1dtcsvd_input_files = [file_name_temp%m for m in mode_list]
pps1dtcsvd_labels = [
    'without mode subtracted',
    'subtract the first mode',
    'subtract the first 2 modes',
    'subtract the first 5 modes',
    ]
pps1dtcsvd_label_title = 'MeerKAT Ant. %s'%ant
pps1dtcsvd_vmin = 1.e-9
pps1dtcsvd_vmax = 1.e-3
pps1dtcsvd_output_files = ['ps/%s_submodes%s'%(file_name, file_suffix),]

#------------------------------------------------------------------------------

file_name_temp = 'pnps_1dfc/' + file_name + '_vis_sub%02dmodes' + file_suffix + '.h5'
pps1dfcsvd_input_files = [file_name_temp%m for m in mode_list]
pps1dfcsvd_labels = [
    'without mode subtracted',
    'subtract the first mode',
    'subtract the first 2 modes',
    'subtract the first 5 modes',
    ]
pps1dfcsvd_label_title = 'MeerKAT Ant. %s'%ant
pps1dfcsvd_vmin = 1.e-9
pps1dfcsvd_vmax = 1.e-3
pps1dfcsvd_corr_type = 'fcorr'
pps1dfcsvd_output_files = ['ps/%s_submodes%s'%(file_name, file_suffix),]

#------------------------------------------------------------------------------
# parameter for plot ps with differenct svd modes subtraction
file_name_temp = 'pnps/' + file_name + '_modes%02d' + file_suffix + '.h5'
ppsmod_input_files = [file_name_temp%(m + 1) for m in range(4)]
ppsmod_labels = [
    'the 1st SVD mode',
    'the 2nd SVD mode',
    'the 3rd SVD mode',
    'the 4th SVD mode',
    ]
ppsmod_label_title = 'MeerKAT Ant. %s'%ant
ppsmod_vmin = 1.e-10
ppsmod_vmax = 1.e-4
ppsmod_output_files = ['ps/%s_SVDmodes%s'%(file_name, file_suffix),]


#------------------------------------------------------------------------------

# parameter for plot raw ps with differenct ants
ppsall_input_files = [
    'pnps/%s_vis_avg0100_tcorrps_%s_m017_x_m017.h5'%(file_name, ps_method),
    'pnps/%s_vis_avg0100_tcorrps_%s_m021_x_m021.h5'%(file_name, ps_method),
    'pnps/%s_vis_avg0100_tcorrps_%s_m036_x_m036.h5'%(file_name, ps_method),
    ]
ppsall_labels = [
    'MeerKAT Ant. m017',
    'MeerKAT Ant. m021',
    'MeerKAT Ant. m036',
    ]
ppsall_vmin = 1.e-9
ppsall_vmax = 1.e-3
ppsall_output_files = ['ps/%s_allants_%s'%(file_name, file_middle)]


#------------------------------------------------------------------------------

# waterfall plots
pkat_input_files = m2t_output_files
#pkat_input_files = pned_output_files
#pkat_input_files = todsvd_output_files
pkat_re_scale = 2.
#pkat_fig_name = 'wf/%s_raw'%file_name
#pkat_fig_name = 'wf/%s_flagbad'%file_name
pkat_main_data = 'vis'
#pkat_main_data = 'vis_sub00modes'
pkat_fig_name = 'wf/%s'%file_name
pkat_flag_mask = True


